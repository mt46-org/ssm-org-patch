{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "cloudformation",
            "Effect": "Allow",
            "Action": [
                "cloudformation:CreateChangeSet",
                "cloudformation:CreateStack",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:DescribeStacks",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:CreateStackSet",
                "cloudformation:CreateStackInstances"
            ],
            "Resource": "*"
        },
        {
            "Sid": "SystemManager",
            "Effect": "Allow",
            "Action": [
                "ssm:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "events",
            "Effect": "Allow",
            "Action": [
                "events:ActivateEventSource",
                "events:CancelReplay",
                "events:CreateApiDestination",
                "events:CreateArchive",
                "events:CreateConnection",
                "events:CreateEndpoint",
                "events:CreateEventBus",
                "events:CreatePartnerEventSource",
                "events:DeactivateEventSource",
                "events:DeauthorizeConnection",
                "events:DeleteRule",
                "events:DescribeApiDestination",
                "events:DescribeArchive",
                "events:DescribeConnection",
                "events:DescribeEndpoint",
                "events:DescribeEventBus",
                "events:DescribeEventSource",
                "events:DescribePartnerEventSource",
                "events:DescribeReplay",
                "events:DescribeRule",
                "events:DisableRule",
                "events:EnableRule",
                "events:InvokeApiDestination",
                "events:ListApiDestinations",
                "events:ListArchives",
                "events:ListConnections",
                "events:ListEndpoints",
                "events:ListEventBuses",
                "events:ListEventSources",
                "events:ListPartnerEventSourceAccounts",
                "events:ListPartnerEventSources",
                "events:ListReplays",
                "events:ListRuleNamesByTarget",
                "events:ListRules",
                "events:ListTagsForResource",
                "events:ListTargetsByRule",
                "events:PutEvents",
                "events:PutPartnerEvents",
                "events:PutPermission",
                "events:PutRule",
                "events:PutTargets",
                "events:RemoveTargets",
                "events:StartReplay",
                "events:TestEventPattern",
                "events:UpdateApiDestination",
                "events:UpdateArchive",
                "events:UpdateConnection",
                "events:UpdateEndpoint"
            ],
            "Resource": "*"
        },
        {
            "Sid": "lambda",
            "Effect": "Allow",
            "Action": [
                "lambda:AddLayerVersionPermission",
                "lambda:AddPermission",
                "lambda:CreateAlias",
                "lambda:CreateCodeSigningConfig",
                "lambda:CreateEventSourceMapping",
                "lambda:CreateFunction",
                "lambda:CreateFunctionUrlConfig",
                "lambda:EnableReplication",
                "lambda:GetAccountSettings",
                "lambda:GetAlias",
                "lambda:GetCodeSigningConfig",
                "lambda:GetEventSourceMapping",
                "lambda:GetFunction",
                "lambda:GetFunctionCodeSigningConfig",
                "lambda:GetFunctionConcurrency",
                "lambda:GetFunctionConfiguration",
                "lambda:GetFunctionEventInvokeConfig",
                "lambda:GetFunctionUrlConfig",
                "lambda:GetLayerVersion",
                "lambda:GetLayerVersionPolicy",
                "lambda:GetPolicy",
                "lambda:GetProvisionedConcurrencyConfig",
                "lambda:GetRuntimeManagementConfig",
                "lambda:InvokeAsync",
                "lambda:InvokeFunction",
                "lambda:InvokeFunctionUrl",
                "lambda:ListAliases",
                "lambda:ListCodeSigningConfigs",
                "lambda:ListEventSourceMappings",
                "lambda:ListFunctionEventInvokeConfigs",
                "lambda:ListFunctionUrlConfigs",
                "lambda:ListFunctions",
                "lambda:ListFunctionsByCodeSigningConfig",
                "lambda:ListLayerVersions",
                "lambda:ListLayers",
                "lambda:ListProvisionedConcurrencyConfigs",
                "lambda:ListTags",
                "lambda:ListVersionsByFunction",
                "lambda:PublishLayerVersion",
                "lambda:PublishVersion",
                "lambda:PutFunctionCodeSigningConfig",
                "lambda:PutFunctionConcurrency",
                "lambda:PutFunctionEventInvokeConfig",
                "lambda:PutProvisionedConcurrencyConfig",
                "lambda:PutRuntimeManagementConfig",
                "lambda:UpdateAlias",
                "lambda:UpdateCodeSigningConfig",
                "lambda:UpdateEventSourceMapping",
                "lambda:UpdateFunctionCode",
                "lambda:UpdateFunctionCodeSigningConfig",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionEventInvokeConfig",
                "lambda:UpdateFunctionUrlConfig",
                "lambda:RemovePermission",
                "lambda:DeleteFunction"
            ],
            "Resource": "*"
        },
        {
            "Sid": "iam",
            "Effect": "Allow",
            "Action": [
                "iam:GetAccountAuthorizationDetails",
                "iam:GetAccountName",
                "iam:GetAccountPasswordPolicy",
                "iam:GetContextKeysForCustomPolicy",
                "iam:GetOrganizationsAccessReport",
                "iam:GetServiceLastAccessedDetails",
                "iam:GetServiceLastAccessedDetailsWithEntities",
                "iam:GetRole",
                "iam:CreateRole",
                "iam:AttachRolePolicy",
                "iam:AttachUserPolicy",
                "iam:CreatePolicy",
                "iam:CreatePolicyVersion",
                "iam:CreateServiceLinkedRole",
                "iam:PassRole",
                "iam:PutGroupPolicy",
                "iam:PutRolePolicy",
                "iam:PutUserPolicy",
                "iam:TagPolicy",
                "iam:TagRole",
                "iam:DeleteRolePolicy",
                "iam:DeleteRole"
            ],
            "Resource": "*"
        }
    ]
}